// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: pb/observe.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_observe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_observe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_pb_observe_proto_rawDescGZIP(), []int{0}
}

type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName    string `protobuf:"bytes,1,opt,name=podName,proto3" json:"podName,omitempty"`
	XRequestID string `protobuf:"bytes,2,opt,name=xRequestID,proto3" json:"xRequestID,omitempty"`
	TraceID    string `protobuf:"bytes,3,opt,name=traceID,proto3" json:"traceID,omitempty"`
	SpanID     string `protobuf:"bytes,4,opt,name=spanID,proto3" json:"spanID,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_observe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_observe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_pb_observe_proto_rawDescGZIP(), []int{1}
}

func (x *GetStatusResponse) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *GetStatusResponse) GetXRequestID() string {
	if x != nil {
		return x.XRequestID
	}
	return ""
}

func (x *GetStatusResponse) GetTraceID() string {
	if x != nil {
		return x.TraceID
	}
	return ""
}

func (x *GetStatusResponse) GetSpanID() string {
	if x != nil {
		return x.SpanID
	}
	return ""
}

type MockOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InjectTimeout   uint64  `protobuf:"varint,1,opt,name=injectTimeout,proto3" json:"injectTimeout,omitempty"`     // infect timeout with second
	InjectErrorCode uint32  `protobuf:"varint,2,opt,name=injectErrorCode,proto3" json:"injectErrorCode,omitempty"` // inject error with gRPC error code
	BurnVCPU        float32 `protobuf:"fixed32,3,opt,name=burnVCPU,proto3" json:"burnVCPU,omitempty"`
	BurnGMEM        float32 `protobuf:"fixed32,4,opt,name=burnGMEM,proto3" json:"burnGMEM,omitempty"`
}

func (x *MockOptionRequest) Reset() {
	*x = MockOptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_observe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MockOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockOptionRequest) ProtoMessage() {}

func (x *MockOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_observe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockOptionRequest.ProtoReflect.Descriptor instead.
func (*MockOptionRequest) Descriptor() ([]byte, []int) {
	return file_pb_observe_proto_rawDescGZIP(), []int{2}
}

func (x *MockOptionRequest) GetInjectTimeout() uint64 {
	if x != nil {
		return x.InjectTimeout
	}
	return 0
}

func (x *MockOptionRequest) GetInjectErrorCode() uint32 {
	if x != nil {
		return x.InjectErrorCode
	}
	return 0
}

func (x *MockOptionRequest) GetBurnVCPU() float32 {
	if x != nil {
		return x.BurnVCPU
	}
	return 0
}

func (x *MockOptionRequest) GetBurnGMEM() float32 {
	if x != nil {
		return x.BurnGMEM
	}
	return 0
}

var File_pb_observe_proto protoreflect.FileDescriptor

var file_pb_observe_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x62, 0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x7f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x6e,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x44,
	0x22, 0x9b, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x63, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x69,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x72, 0x6e, 0x56, 0x43,
	0x50, 0x55, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x75, 0x72, 0x6e, 0x56, 0x43,
	0x50, 0x55, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x72, 0x6e, 0x47, 0x4d, 0x45, 0x4d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x75, 0x72, 0x6e, 0x47, 0x4d, 0x45, 0x4d, 0x32, 0x54,
	0x0a, 0x0e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x2e,
	0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pb_observe_proto_rawDescOnce sync.Once
	file_pb_observe_proto_rawDescData = file_pb_observe_proto_rawDesc
)

func file_pb_observe_proto_rawDescGZIP() []byte {
	file_pb_observe_proto_rawDescOnce.Do(func() {
		file_pb_observe_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_observe_proto_rawDescData)
	})
	return file_pb_observe_proto_rawDescData
}

var file_pb_observe_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_observe_proto_goTypes = []interface{}{
	(*GetStatusRequest)(nil),  // 0: observe.GetStatusRequest
	(*GetStatusResponse)(nil), // 1: observe.GetStatusResponse
	(*MockOptionRequest)(nil), // 2: observe.MockOptionRequest
}
var file_pb_observe_proto_depIdxs = []int32{
	0, // 0: observe.ObserveService.GetStatus:input_type -> observe.GetStatusRequest
	1, // 1: observe.ObserveService.GetStatus:output_type -> observe.GetStatusResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pb_observe_proto_init() }
func file_pb_observe_proto_init() {
	if File_pb_observe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_observe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_observe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_observe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MockOptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_observe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_observe_proto_goTypes,
		DependencyIndexes: file_pb_observe_proto_depIdxs,
		MessageInfos:      file_pb_observe_proto_msgTypes,
	}.Build()
	File_pb_observe_proto = out.File
	file_pb_observe_proto_rawDesc = nil
	file_pb_observe_proto_goTypes = nil
	file_pb_observe_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ObserveServiceClient is the client API for ObserveService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ObserveServiceClient interface {
	GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error)
}

type observeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewObserveServiceClient(cc grpc.ClientConnInterface) ObserveServiceClient {
	return &observeServiceClient{cc}
}

func (c *observeServiceClient) GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error) {
	out := new(GetStatusResponse)
	err := c.cc.Invoke(ctx, "/observe.ObserveService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ObserveServiceServer is the server API for ObserveService service.
type ObserveServiceServer interface {
	GetStatus(context.Context, *GetStatusRequest) (*GetStatusResponse, error)
}

// UnimplementedObserveServiceServer can be embedded to have forward compatible implementations.
type UnimplementedObserveServiceServer struct {
}

func (*UnimplementedObserveServiceServer) GetStatus(context.Context, *GetStatusRequest) (*GetStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}

func RegisterObserveServiceServer(s *grpc.Server, srv ObserveServiceServer) {
	s.RegisterService(&_ObserveService_serviceDesc, srv)
}

func _ObserveService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ObserveServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/observe.ObserveService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ObserveServiceServer).GetStatus(ctx, req.(*GetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ObserveService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "observe.ObserveService",
	HandlerType: (*ObserveServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _ObserveService_GetStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/observe.proto",
}
